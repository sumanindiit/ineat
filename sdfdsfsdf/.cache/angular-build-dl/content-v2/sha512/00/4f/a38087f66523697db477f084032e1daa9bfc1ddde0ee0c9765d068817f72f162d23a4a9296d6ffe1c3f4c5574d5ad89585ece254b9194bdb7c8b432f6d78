{"version":3,"sources":["webpack:///node_modules/@codetrix-studio/capacitor-google-auth/dist/esm/web.js"],"names":["GoogleAuthWeb","document","scriptId","scriptEl","getElementById","head","getElementsByTagName","script","createElement","type","defer","async","id","onload","platformJsLoaded","bind","src","appendChild","_options","clientId","scopes","grantOfflineAccess","_a","_b","window","metaClientId","getElementsByName","content","console","warn","options","gapiLoaded","Promise","resolve","gapiResolve","loadScript","addUserChangeListener","gapi","load","clientConfig","client_id","length","scope","join","auth2","init","reject","needsOfflineAccess","getAuthInstance","offlineAccessResponse","serverAuthCode","code","signIn","googleUser","currentUser","get","reloadAuthResponse","user","getUserFrom","authResponse","accessToken","access_token","idToken","id_token","refreshToken","signOut","listen","notifyListeners","isSignedIn","profile","getBasicProfile","email","getEmail","familyName","getFamilyName","givenName","getGivenName","getId","imageUrl","getImageUrl","name","getName","getAuthResponse","authentication"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UACaA,a;;;;;AACT,iCAAc;AAAA;;AAAA;AAEb;;;;iBACD,sBAAa;AACT,gBAAI,OAAOC,QAAP,KAAoB,WAAxB,EAAqC;AACjC;AACH;;AACD,gBAAMC,QAAQ,GAAG,MAAjB;AACA,gBAAMC,QAAQ,GAAGF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACG,cAAT,CAAwBF,QAAxB,CAArE;;AACA,gBAAIC,QAAJ,EAAc;AACV;AACH;;AACD,gBAAME,IAAI,GAAGJ,QAAQ,CAACK,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,CAAb;AACA,gBAAMC,MAAM,GAAGN,QAAQ,CAACO,aAAT,CAAuB,QAAvB,CAAf;AACAD,kBAAM,CAACE,IAAP,GAAc,iBAAd;AACAF,kBAAM,CAACG,KAAP,GAAe,IAAf;AACAH,kBAAM,CAACI,KAAP,GAAe,IAAf;AACAJ,kBAAM,CAACK,EAAP,GAAYV,QAAZ;AACAK,kBAAM,CAACM,MAAP,GAAgB,KAAKC,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAhB;AACAR,kBAAM,CAACS,GAAP,GAAa,wCAAb;AACAX,gBAAI,CAACY,WAAL,CAAiBV,MAAjB;AACH;;;iBACD,sBAIG;AAAA;;AAAA,gBAJQW,QAIR,uEAJmB;AAClBC,sBAAQ,EAAE,EADQ;AAElBC,oBAAM,EAAE,EAFU;AAGlBC,gCAAkB,EAAE;AAHF,aAInB;;AACC,gBAAIC,EAAJ,EAAQC,EAAR;;AACA,gBAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AAC/B;AACH;;AACD,gBAAMC,YAAY,GAAG,CAACH,EAAE,GAAGrB,QAAQ,CAACyB,iBAAT,CAA2B,yBAA3B,EAAsD,CAAtD,CAAN,MAAoE,IAApE,IAA4EJ,EAAE,KAAK,KAAK,CAAxF,GAA4F,KAAK,CAAjG,GAAqGA,EAAE,CAACK,OAA7H;AACA,gBAAMR,QAAQ,GAAGD,QAAQ,CAACC,QAAT,IAAqBM,YAArB,IAAqC,EAAtD;;AACA,gBAAI,CAACN,QAAL,EAAe;AACXS,qBAAO,CAACC,IAAR,CAAa,sCAAb;AACH;;AACD,iBAAKC,OAAL,GAAe;AACXX,sBAAQ,EAARA,QADW;AAEXE,gCAAkB,EAAE,CAACE,EAAE,GAAGL,QAAQ,CAACG,kBAAf,MAAuC,IAAvC,IAA+CE,EAAE,KAAK,KAAK,CAA3D,GAA+DA,EAA/D,GAAoE,KAF7E;AAGXH,oBAAM,EAAEF,QAAQ,CAACE,MAAT,IAAmB;AAHhB,aAAf;AAKA,iBAAKW,UAAL,GAAkB,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AACvC;AACAT,oBAAM,CAACU,WAAP,GAAqBD,OAArB;;AACA,mBAAI,CAACE,UAAL;AACH,aAJiB,CAAlB;AAKA,iBAAKC,qBAAL;AACH;;;iBACD,4BAAmB;AAAA;;AACfC,gBAAI,CAACC,IAAL,CAAU,OAAV,EAAmB,YAAM;AACrB,kBAAMC,YAAY,GAAG;AACjBC,yBAAS,EAAE,MAAI,CAACV,OAAL,CAAaX;AADP,eAArB;;AAGA,kBAAI,MAAI,CAACW,OAAL,CAAaV,MAAb,CAAoBqB,MAAxB,EAAgC;AAC5BF,4BAAY,CAACG,KAAb,GAAqB,MAAI,CAACZ,OAAL,CAAaV,MAAb,CAAoBuB,IAApB,CAAyB,GAAzB,CAArB;AACH;;AACDN,kBAAI,CAACO,KAAL,CAAWC,IAAX,CAAgBN,YAAhB;AACAf,oBAAM,CAACU,WAAP;AACH,aATD;AAUH;;;;kFACD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wDACW,IAAIF,OAAJ;AAAA,2FAAY,iBAAOC,OAAP,EAAgBa,MAAhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAILC,oDAJK,GAIgB,CAACzB,EAAE,GAAG,MAAI,CAACQ,OAAL,CAAaT,kBAAnB,MAA2C,IAA3C,IAAmDC,EAAE,KAAK,KAAK,CAA/D,GAAmEA,EAAnE,GAAwE,KAJxF;;AAAA,uCAKPyB,kBALO;AAAA;AAAA;AAAA;;AAAA;AAAA,yCAM6BV,IAAI,CAACO,KAAL,CAAWI,eAAX,GAA6B3B,kBAA7B,EAN7B;;AAAA;AAMD4B,uDANC;AAOPC,gDAAc,GAAGD,qBAAqB,CAACE,IAAvC;AAPO;AAAA;;AAAA;AAAA;AAAA,yCAUDd,IAAI,CAACO,KAAL,CAAWI,eAAX,GAA6BI,MAA7B,EAVC;;AAAA;AAYLC,4CAZK,GAYQhB,IAAI,CAACO,KAAL,CAAWI,eAAX,GAA6BM,WAA7B,CAAyCC,GAAzC,EAZR;;AAAA,uCAaPR,kBAbO;AAAA;AAAA;AAAA;;AAAA;AAAA,yCAeDM,UAAU,CAACG,kBAAX,EAfC;;AAAA;AAiBLC,sCAjBK,GAiBE,MAAI,CAACC,WAAL,CAAiBL,UAAjB,CAjBF;AAkBXI,sCAAI,CAACP,cAAL,GAAsBA,cAAtB;AACAjB,yCAAO,CAACwB,IAAD,CAAP;AAnBW;AAAA;;AAAA;AAAA;AAAA;AAsBXX,wCAAM,aAAN;;AAtBW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAZ;;AAAA;AAAA;AAAA;AAAA,0BADX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,a;;;;;;;;;;;mFA2BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAC+BT,IAAI,CAACO,KAAL,CAAWI,eAAX,GAA6BM,WAA7B,CAAyCC,GAAzC,GAA+CC,kBAA/C,EAD/B;;AAAA;AACUG,kCADV;AAAA,wDAEW;AACHC,mCAAW,EAAED,YAAY,CAACE,YADvB;AAEHC,+BAAO,EAAEH,YAAY,CAACI,QAFnB;AAGHC,oCAAY,EAAE;AAHX,uBAFX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,a;;;;;;;;;;;mFAQA;AAAA;AAAA;AAAA;AAAA;AAAA,wDACW3B,IAAI,CAACO,KAAL,CAAWI,eAAX,GAA6BiB,OAA7B,EADX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,a;;;;;;;;;;;iGAGA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACU,KAAKlC,UADf;;AAAA;AAEIM,0BAAI,CAACO,KAAL,CAAWI,eAAX,GAA6BM,WAA7B,CAAyCY,MAAzC,CAAgD,UAACb,UAAD,EAAgB;AAC5D,8BAAI,CAACc,eAAL,CAAqB,YAArB,EAAmCd,UAAU,CAACe,UAAX,KAA0B,MAAI,CAACV,WAAL,CAAiBL,UAAjB,CAA1B,GAAyD,IAA5F;AACH,uBAFD;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,a;;;;;;;;;;iBAMA,qBAAYA,UAAZ,EAAwB;AACpB,gBAAMI,IAAI,GAAG,EAAb;AACA,gBAAMY,OAAO,GAAGhB,UAAU,CAACiB,eAAX,EAAhB;AACAb,gBAAI,CAACc,KAAL,GAAaF,OAAO,CAACG,QAAR,EAAb;AACAf,gBAAI,CAACgB,UAAL,GAAkBJ,OAAO,CAACK,aAAR,EAAlB;AACAjB,gBAAI,CAACkB,SAAL,GAAiBN,OAAO,CAACO,YAAR,EAAjB;AACAnB,gBAAI,CAAC7C,EAAL,GAAUyD,OAAO,CAACQ,KAAR,EAAV;AACApB,gBAAI,CAACqB,QAAL,GAAgBT,OAAO,CAACU,WAAR,EAAhB;AACAtB,gBAAI,CAACuB,IAAL,GAAYX,OAAO,CAACY,OAAR,EAAZ;AACA,gBAAMtB,YAAY,GAAGN,UAAU,CAAC6B,eAAX,CAA2B,IAA3B,CAArB;AACAzB,gBAAI,CAAC0B,cAAL,GAAsB;AAClBvB,yBAAW,EAAED,YAAY,CAACE,YADR;AAElBC,qBAAO,EAAEH,YAAY,CAACI,QAFJ;AAGlBC,0BAAY,EAAE;AAHI,aAAtB;AAKA,mBAAOP,IAAP;AACH;;;;QAzH8B,yD,GA2HnC","file":"web-es5.js","sourcesContent":["import { WebPlugin } from '@capacitor/core';\nexport class GoogleAuthWeb extends WebPlugin {\n    constructor() {\n        super();\n    }\n    loadScript() {\n        if (typeof document === 'undefined') {\n            return;\n        }\n        const scriptId = 'gapi';\n        const scriptEl = document === null || document === void 0 ? void 0 : document.getElementById(scriptId);\n        if (scriptEl) {\n            return;\n        }\n        const head = document.getElementsByTagName('head')[0];\n        const script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.defer = true;\n        script.async = true;\n        script.id = scriptId;\n        script.onload = this.platformJsLoaded.bind(this);\n        script.src = 'https://apis.google.com/js/platform.js';\n        head.appendChild(script);\n    }\n    initialize(_options = {\n        clientId: '',\n        scopes: [],\n        grantOfflineAccess: false,\n    }) {\n        var _a, _b;\n        if (typeof window === 'undefined') {\n            return;\n        }\n        const metaClientId = (_a = document.getElementsByName('google-signin-client_id')[0]) === null || _a === void 0 ? void 0 : _a.content;\n        const clientId = _options.clientId || metaClientId || '';\n        if (!clientId) {\n            console.warn('GoogleAuthPlugin - clientId is empty');\n        }\n        this.options = {\n            clientId,\n            grantOfflineAccess: (_b = _options.grantOfflineAccess) !== null && _b !== void 0 ? _b : false,\n            scopes: _options.scopes || [],\n        };\n        this.gapiLoaded = new Promise((resolve) => {\n            // HACK: Relying on window object, can't get property in gapi.load callback\n            window.gapiResolve = resolve;\n            this.loadScript();\n        });\n        this.addUserChangeListener();\n    }\n    platformJsLoaded() {\n        gapi.load('auth2', () => {\n            const clientConfig = {\n                client_id: this.options.clientId,\n            };\n            if (this.options.scopes.length) {\n                clientConfig.scope = this.options.scopes.join(' ');\n            }\n            gapi.auth2.init(clientConfig);\n            window.gapiResolve();\n        });\n    }\n    async signIn() {\n        return new Promise(async (resolve, reject) => {\n            var _a;\n            try {\n                let serverAuthCode;\n                const needsOfflineAccess = (_a = this.options.grantOfflineAccess) !== null && _a !== void 0 ? _a : false;\n                if (needsOfflineAccess) {\n                    const offlineAccessResponse = await gapi.auth2.getAuthInstance().grantOfflineAccess();\n                    serverAuthCode = offlineAccessResponse.code;\n                }\n                else {\n                    await gapi.auth2.getAuthInstance().signIn();\n                }\n                const googleUser = gapi.auth2.getAuthInstance().currentUser.get();\n                if (needsOfflineAccess) {\n                    // HACK: AuthResponse is null if we don't do this when using grantOfflineAccess\n                    await googleUser.reloadAuthResponse();\n                }\n                const user = this.getUserFrom(googleUser);\n                user.serverAuthCode = serverAuthCode;\n                resolve(user);\n            }\n            catch (error) {\n                reject(error);\n            }\n        });\n    }\n    async refresh() {\n        const authResponse = await gapi.auth2.getAuthInstance().currentUser.get().reloadAuthResponse();\n        return {\n            accessToken: authResponse.access_token,\n            idToken: authResponse.id_token,\n            refreshToken: '',\n        };\n    }\n    async signOut() {\n        return gapi.auth2.getAuthInstance().signOut();\n    }\n    async addUserChangeListener() {\n        await this.gapiLoaded;\n        gapi.auth2.getAuthInstance().currentUser.listen((googleUser) => {\n            this.notifyListeners('userChange', googleUser.isSignedIn() ? this.getUserFrom(googleUser) : null);\n        });\n    }\n    getUserFrom(googleUser) {\n        const user = {};\n        const profile = googleUser.getBasicProfile();\n        user.email = profile.getEmail();\n        user.familyName = profile.getFamilyName();\n        user.givenName = profile.getGivenName();\n        user.id = profile.getId();\n        user.imageUrl = profile.getImageUrl();\n        user.name = profile.getName();\n        const authResponse = googleUser.getAuthResponse(true);\n        user.authentication = {\n            accessToken: authResponse.access_token,\n            idToken: authResponse.id_token,\n            refreshToken: '',\n        };\n        return user;\n    }\n}\n//# sourceMappingURL=web.js.map"]}